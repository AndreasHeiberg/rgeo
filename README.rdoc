== RGeo

RGeo is a geospatial data library for Ruby.

=== Summary

RGeo is a key component for writing location-aware applications in the
Ruby programming language. At its core is an implementation of the
industry standard OGC Simple Features Specification. It then provides
the basic components for modeling location data and communicating with
location-aware services and database systems. It also provides a suite
of useful tools for writing location-aware applications using Ruby-based
frameworks such as Ruby On Rails.

Use RGeo to:

* Represent spatial and geolocation data objects such as points, lines,
  and polygons in your Ruby application.
* Perform standard spatial analysis operations such as finding
  intersections, creating buffers, and computing lengths and areas.
* Correctly handle spherical geometry, and compute geographic projections
  for map display and data analysis.
* Store and retrieve data in industry standard spatial database
  systems such as MySQL Spatial, SpatiaLite, and PostGIS.
* Generate and interpret GeoJSON data for communication with common
  location-based web services such as SimpleGeo.
* Read legacy GIS data from ESRI shapefiles.
* Extend Ruby On Rails to handle location data in a web application.
* Write to the latest standards from the Open Geospatial Consortium.

IMPORTANT: RGeo is currently under development, and we consider it to be
in a "pre-alpha" state. Several features are not yet complete, and there
are known bugs and holes in the test suite. We also expect the APIs to be
in flux for a short while longer. Therefore, we do not yet recommend the
use of RGeo in production.

=== Requirements

RGeo has the following hard requirements:

* Ruby 1.8.7 or later. Ruby 1.9.2 or later preferred.
  Rubinius and JRuby are not yet supported.

Some features also require the following:

* GEOS 3.2 or later is highly recommended. Some functions will not be
  available without it. This C/C++ library may be available via your
  operating system's package manager, or you can download it from
  http://geos.osgeo.org/
* Proj 4.7.0 or later is also recommended. This is needed if you want
  to translate coordinates between geographic projections. It also may
  be available via your operating system's package manager, or from
  http://trac.osgeo.org/proj/
* If you are using the GeoJSON tools under Ruby 1.8.7, you should
  install the "json" gem. Ruby 1.9 has JSON support in its standard
  library and does not require the gem.
* If you are using the shapefile reader, you should install the "dbf"
  gem, version 1.5.2 or later, which is needed to read the attributes.
* The ActiveRecord adapters for MySQL Spatial, PostGIS, and SpatiaLite
  require ActiveRecord 3.0.3 or later, and the corresponding database
  driver gems (e.g. "mysql", "mysql2", "sqlite3-ruby", "pg", etc.).
  Note that the adapters are NOT compatible with ActiveRecord 2.3.

=== Installation

Install RGeo as a gem:

 gem install rgeo

Note: By default, the gem installation looks for the required GEOS
library in the following locations:

* /usr/local
* /usr/local/geos
* /opt/local
* /usr

If GEOS has been installed in a different location, you must provide its
installation prefix directory using the "--with-geos-dir" option. This
option must be preceded by "--" to separate it, as a build switch, from
the switches interpreted by the gem command. For example:

 gem install rgeo -- --with-geos-dir=/path/to/my/geos/installation

Similarly, the gem installation looks for the Proj4 library in the
following locations by default:

* /usr/local
* /usr/local/proj
* /usr/local/proj4
* /opt/local
* /usr

If Proj4 is installed in a different location, you must provide its
installation prefix directory using the "--with-proj-dir" option.

=== To-do items

This is our planned roadmap, in rough priority order.

* Continued work on the ActiveRecord adapters.
* Possible Arel extensions for constructing spatial queries.
* OGC coordinate system representation.
* Support for bbox and crs elements of GeoJSON.
* Ellipsoidal geography implementation, probably utilizing geographiclib.
* Integration with certain third-party services such as SimpleGeo.
* Rubinius support for C library integration.
* JRuby support via JTS integration.
* Support for writing shapefiles. (Reading is already implemented.)
* Read and write other formats such as GeoRSS and KML.

=== Development and support

Documentation is available at http://virtuoso.rubyforge.org/rgeo/README_rdoc.html

Source code is hosted on Github at http://github.com/dazuma/rgeo

Report bugs on Github issues at http://github.org/dazuma/rgeo/issues

Contact the author at dazuma at gmail dot com.

=== Acknowledgments

RGeo is written by Daniel Azuma (http://www.daniel-azuma.com/).

Development of RGeo is sponsored by GeoPage, Inc. (http://www.geopage.com/).

RGeo links with the GEOS library to handle most Cartesian geometric
calculations, and with the Proj4 library to handle projections and
coordinate transforms. These libraries are maintained by the Open Source
Geospatial Foundation; more information is available on OSGeo's web site
(http://www.osgeo.org/).

The ActiveRecord adapters owe some debt to the spatial_adapter plugin
(http://github.com/fragility/spatial_adapter). RGeo's implementation is
a little different because we made some different design decisions, but
studying the spatial_adapter source gave us a head start.

Although we don't use shapelib (http://shapelib.maptools.org/) to read
ESRI shapefiles, we did borrow a bunch of their test cases.

=== License

Copyright 2010 Daniel Azuma

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.
* Neither the name of the copyright holder, nor the names of any other
  contributors to this software, may be used to endorse or promote products
  derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
